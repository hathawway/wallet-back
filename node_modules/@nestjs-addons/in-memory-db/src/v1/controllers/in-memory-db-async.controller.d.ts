import { InMemoryDBV1Service } from '../services';
import { InMemoryDBV1Entity } from '../interfaces';
import { Observable } from 'rxjs';
export declare abstract class InMemoryDBV1EntityAsyncController<T extends InMemoryDBV1Entity> {
    protected readonly dbService: InMemoryDBV1Service<T>;
    constructor(dbService: InMemoryDBV1Service<T>);
    create(record: Partial<T> | Array<Partial<T>>): Observable<T | T[]>;
    update(id: T['id'], record: Partial<T>): Observable<void>;
    updateMany(records: T[]): Observable<void>;
    delete(id: T['id']): Observable<void>;
    deleteMany(ids: Array<T['id']>): Observable<void>;
    get(id: T['id']): Observable<T>;
    getMany(ids?: Array<T['id']>): Observable<T[]>;
}
